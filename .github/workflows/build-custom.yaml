name: Build Artifacts with custom patches
run-name: "PG ${{ inputs.postgres_version }}. Custom PG ${{ inputs.custom_postgres_version }}"
on:
  workflow_dispatch:
    inputs:
      postgres_version:
        description: "PostgreSQL version to build (15, 16, 17)"
        type: choice
        options:
          - "15"
          - "16"
          - "17"
        default: "17"
        required: false
      custom_postgres_version:
        description: "Custom PostgreSQL version label (e.g. 17.3-1)"
        type: string
        default: "17.6-2"
        required: false
      publish_docker:
        description: "Publish image to ghcr.io/github.repository_owner/pgskipper-patroni"
        type: boolean
        default: false
        required: false

env:
  TAG_NAME: ${{ github.event.release.tag_name || github.ref }}
  PUSH: ${{ (github.event_name != 'workflow_dispatch' || inputs.publish_docker) && github.actor != 'dependabot[bot]' }}

jobs:
  multiplatform_build:
    strategy:
      fail-fast: false
      matrix:
        component:
          - name: pgskipper-patroni-17
            file: Dockerfile-custom
            context: ""
            pg_version: ${{ inputs.postgres_version || '17' }}
            custom_pg_version: ${{ inputs.custom_postgres_version || '17.6-2' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Validate
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.ref }}" == refs/tags* ]]; then
            echo -e "\033[91mManual workflow run on tags is not allowed!\033[0m"
            exit 1
          fi
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${GITHUB_ACTOR}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Prepare Tag
        run: echo "TAG_NAME=$(echo ${TAG_NAME} | sed 's@refs/tags/@@;s@refs/heads/@@;s@/@_@g')" >> $GITHUB_ENV
      - name: Get package IDs for delete
        id: get-ids-for-delete
        uses: Netcracker/get-package-ids@v0.0.1
        with:
          component-name: ${{ matrix.component.name }}
          component-tag: ${{ env.TAG_NAME }}
          access-token: ${{secrets.GITHUB_TOKEN}}
        if: ${{ env.PUSH }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          no-cache: true
          context: ${{ matrix.component.context }}
          file: ${{ matrix.component.file }}
          build-args: |
            PG_VERSION=${{ matrix.component.pg_version }}
            CUSTOM_PG_VERSION=${{ matrix.component.custom_pg_version }}
          platforms: linux/amd64,linux/arm64
          push: ${{ env.PUSH }}
          tags: ghcr.io/${{ github.repository_owner }}/${{ matrix.component.name }}:${{ env.TAG_NAME }}
          provenance: false
      - uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ matrix.component.name }}
          package-type: 'container'
          package-version-ids: ${{ steps.get-ids-for-delete.outputs.ids-for-delete }}
        if: ${{ steps.get-ids-for-delete.outputs.ids-for-delete != '' }}
